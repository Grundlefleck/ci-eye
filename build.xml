<?xml version="1.0" encoding="utf-8" ?>
<project name="CI-Eye" default="jar" basedir=".">

    <property name="target.version" value="0.1.4"/>
    <tstamp><format property="build.number" pattern="yyyyMMddHHmmss" timezone="GMT"/></tstamp>
    <tstamp><format property="build.timestamp" pattern="yyyy-MM-dd HH:mm:ss" timezone="GMT"/></tstamp>

    <target name="version-for-snapshot" unless="release.build">
        <property name="version.label" value="${target.version}-SNAPSHOT-${build.number}"/>
    </target>

    <target name="version-for-release" if="release.build">
        <property name="version.label" value="${target.version}"/>
    </target>

    <target name="version" depends="version-for-snapshot,version-for-release"/>

    <path id="compile-main.req">
        <fileset dir="vendor/lib" includes="**/*.jar"/>
    </path>

    <path id="run-main.req">
        <path refid="compile-main.req"/>
        <pathelement location="build/main"/>
    </path>

    <path id="compile-test.req">
        <path refid="run-main.req"/>
        <fileset dir="vendor/buildlib" includes="**/*.jar"/>
    </path>

    <path id="run-test.req">
        <path refid="compile-test.req"/>
        <pathelement location="build/test"/>
    </path>

    <target name="compile-src" description="Compile java source to bytecode">
        <mkdir dir="build"/>
        <mkdir dir="build/main"/>
        <javac srcdir="src/main/java"
               includes="**"
               includeantruntime="false"
               encoding="utf-8"
               destdir="build/main"
               source="1.5"
               target="1.5"
               debug="true"
               debuglevel="lines,source">
            <classpath refid="compile-main.req"/>
        </javac>
        
        <copy todir="build/main">
            <fileset dir="src/main/java" excludes="**/*.java"/>
        </copy>
        <copy todir="build/main">
            <fileset dir="src/main/webapp"/>
        </copy>
        <copy todir="build/main">
            <fileset dir="vendor/jslib"/>
        </copy>
    </target>

    <target name="compile-test" description="Compile java test source to bytecode">
        <mkdir dir="build"/>
        <mkdir dir="build/test"/>
        <javac srcdir="src/test/java"
               includes="**"
               includeantruntime="false"
               encoding="utf-8"
               destdir="build/test"
               source="1.5"
               target="1.5"
               debug="true"
               debuglevel="lines,source">
            <classpath refid="compile-test.req"/>
        </javac>
        
        <copy todir="build/test">
            <fileset dir="src/test/java" excludes="**/*.java"/>
        </copy>
        <copy todir="build/test">
            <fileset dir="src/test/webapp"/>
        </copy>
        <copy todir="build/test">
            <fileset dir="build/main"/>
        </copy>
    </target>

    <target name="test" depends="compile-src,compile-test" description="Tests this project">
        <mkdir dir="build/doc"/>
        
        <junit printsummary="yes" haltonfailure="yes">
            <classpath refid="run-test.req"/>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="build/doc">
                <fileset dir="src/test/java">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build" depends="compile-src" description="Build this project" />

    <target name="clean" description="Cleans this project">
        <delete dir="build" failonerror="false" />
    </target>

    <target name="dependencycheck" depends="clean,build">
        <mkdir dir="build/docs"/>
        <taskdef name="classycleDependencyCheck"
                 classname="classycle.ant.DependencyCheckingTask"
                 classpath="vendor/buildlib/classycle-1.4.jar"/>
        
        <classycleDependencyCheck definitionFile="dependencies.ddf" failOnUnwantedDependencies="true">
            <fileset dir="build/main">
                <include name="**/*.class"/>
            </fileset>
        </classycleDependencyCheck>
    </target>

    <target name="jar" depends="clean,build,test,dependencycheck,version" description="Create a jar file">
        <jar destfile="build/ci-eye-${version.label}.jar">
            <fileset dir="build/main"/>
            <fileset dir="." includes="LICENSE NOTICE README"/>
            
            <zipfileset src="vendor/lib/commons-codec-1.4.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/commons-io-2.0.1.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/commons-logging-1.1.1.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/gson-1.7.2.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/guava-10.0.1.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/httpclient-4.1.2.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/httpclient-cache-4.1.2.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/httpcore-4.1.3.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/httpcore-nio-4.1.3.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/httpmime-4.1.2.jar" excludes="**/META-INF/**"/>
            <zipfileset src="vendor/lib/simple-4.1.21.jar" excludes="**/META-INF/**"/>
            
            <manifest>
                <attribute name="Main-Class" value="org.netmelody.cieye.CiEye"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="netmelody.org"/>
                <attribute name="Implementation-Title" value="CI-Eye"/>
                <attribute name="Implementation-Version" value="${version.label}"/>
                <attribute name="Built-Date" value="${build.timestamp}"/>
            </manifest>
        </jar>
    </target>

    <target name="release" description="Create a release jar file">
        <property name="release.build" value="true"/>
        <antcall target="jar"/>
    </target>
</project>
